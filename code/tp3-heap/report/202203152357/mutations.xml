<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><block>6</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testCount()]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testCount()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>32</index><block>8</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testCount()]</killingTest><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::count</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>getHeap</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPushOk()]</killingTest><description>replaced return value with Collections.emptyList for fr/istic/vv/BinaryHeap::getHeap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasChild</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasChild</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasChild</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>20</index><block>6</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>replaced boolean return with true for fr/istic/vv/BinaryHeap::hasChild</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasLeft</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasLeft</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>replaced boolean return with true for fr/istic/vv/BinaryHeap::hasLeft</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasRight</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>hasRight</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>replaced boolean return with true for fr/istic/vv/BinaryHeap::hasRight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::left</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>left</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>27</index><block>5</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>parent</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>2</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>parent</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>parent</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>parent</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>17</index><block>2</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::parent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>peek</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPeekEmpty()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>peek</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>16</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPeek()]</killingTest><description>replaced return value with null for fr/istic/vv/BinaryHeap::peek</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopEmpty()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>removed call to fr/istic/vv/BinaryHeap::sortHeapFromRoot</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><index>29</index><block>5</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>replaced return value with null for fr/istic/vv/BinaryHeap::pop</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>8</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPushOk()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPushOk()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPushOk()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>4</block><killingTest/><description>removed call to fr/istic/vv/BinaryHeap::sortEntryEndToRoot</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>8</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>removed call to fr/istic/vv/BinaryHeap::sortEntryEndToRoot</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>22</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::right</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>right</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>27</index><block>5</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>11</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>5</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>11</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>17</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>38</index><block>13</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::smallerChild</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>45</index><block>15</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::smallerChild</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>56</index><block>19</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::smallerChild</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>63</index><block>21</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::smallerChild</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>smallerChild</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><index>68</index><block>22</block><killingTest/><description>replaced int return with 0 for fr/istic/vv/BinaryHeap::smallerChild</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>5</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>10</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortEntryEndToRoot</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>12</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testSortOk()]</killingTest><description>removed call to fr/istic/vv/BinaryHeap::swap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortHeapFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortHeapFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortHeapFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>6</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPopItAll()]</killingTest><description>removed call to fr/istic/vv/BinaryHeap::swap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>sortHeapFromRoot</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>removed call to fr/istic/vv/BinaryHeap::trim</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>6</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryHeap.java</sourceFile><mutatedClass>fr.istic.vv.BinaryHeap</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest>fr.istic.vv.BinaryHeapTest.[engine:junit-jupiter]/[class:fr.istic.vv.BinaryHeapTest]/[method:testPop()]</killingTest><description>negated conditional</description></mutation>
</mutations>
